String in JS -> are sequence of characters to represent text.
				Stirng are immutable.
Example - 
let text = "John Doe";

You can use single or double quotes:
let carName1 = "Volvo XC60";  // Double quotes
let carName2 = 'Volvo XC60';  // Single quotes
Strings created with single or double quotes works the same.

# Template Strings -> Templates were introduced with ES6 (JavaScript 2016).
					  Templates are strings enclosed in backticks (`This is a template string`).
					  Templates allow single and double quotes inside a string:
					  let text = `He's often called "Johnny"`;
					  [Note : Templates are not supported in Internet Explorer.]
					  Templates allow multiline strings:
				  	  let text =
				      `The quick
				      brown fox
				      jumps over
				      the lazy dog`;

# Escape Characters -> Code	Result
						\b	Backspace
						\f	Form Feed
						\n	New Line
						\r	Carriage Return
						\t	Horizontal Tabulator
						\v	Vertical Tabulator
						[Note : Lenght of escape characters is not 2, it is 1]

# String Length - To find the length of a string, use the built-in length property:
				  let text = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
				  let length = text.length;
				  Templates allow multiline strings:
				  let text =
				  `The quick
				  brown fox
				  jumps over
				  the lazy dog`;

# String indices - To find character at a particular index 

# String methods -> There are built-in functions to manipulate string.
					All methods of string does not change the original string, thay always return a new string

# 1. toUpperCase() - To convert all characters to upper-case
# 2. toLowerCase() - To convert all characters to lower-case
# 3. trim() - To remove all whitespaces
# 4. slice() - extracts a part of a string and returns the extracted part in a new string.
			   syntax - str.slice(start, end) or str1 + str2
			   start is inclusive
			   end is exclusive
# 5. concat() - joins two or more strings
         		let text1 = "Hello";
         		let text2 = "World";
         		let text3 = text1.concat(" ", text2);
# 6. replace() - method replaces a specified value with another value in a string:
				 syntax : str.replace(searchValue, newValue);
				 [Note : replacement is done only one time]
				 To replce all searchValues we have replaceAll() method
# 7. charAt() - method returns the character at a specified index (position) in a string:
				syntax : str.charAt(index)

# 8. split() - A string can be converted to an array with the split() method:
			   syntax : str.split("")
